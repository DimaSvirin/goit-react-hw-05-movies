{"version":3,"file":"static/js/113.fed4102e.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,+FCaP,UAjDqB,WAAO,IAAD,EACvB,GAA8BQ,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAOO,EAAAA,EAAAA,MAAPP,GACR,EAMIK,GAAW,CAAC,EANhB,IACIG,MAAAA,OADJ,MACY,GADZ,MAEIC,YAAAA,OAFJ,MAEkB,GAFlB,MAGIC,SAAAA,OAHJ,MAGe,GAHf,MAIIC,OAAAA,OAJJ,MAIa,GAJb,MAKIC,aAAAA,OALJ,MAKmB,GALnB,GAQAC,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAaC,GAAIc,KAAKR,EACzB,GAAE,CAACN,IAEJ,IAAMe,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,SAAO,UAAAH,EAASI,aAAT,eAAgBC,OAAQ,KAEhD,OACI,UAAC,IAAD,YACI,0BACI,SAAC,KAAD,CAAMC,GAAIJ,EAASK,QAAnB,SAA4B,YAEhC,8BACA,iBAAKC,UAAU,OAAf,WACI,gBAAKC,IAAG,0CAAqCf,GAAec,UAAU,eAAeE,IAAI,SACzF,4BACI,wBAAKjB,KACL,uBAAIE,QAER,2BACI,2BAAI,0BAAM,WAAa,IAAEC,EAAOe,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,UAC7D,2BAAI,0BAAM,YAAc,IAAEhB,cAIlC,2BACI,SAAC,KAAD,CAAMS,GAAG,OAAT,SAAgB,UAChB,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,gBAGvB,SAAC,EAAAQ,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACI,SAAC,KAAD,QAKf,C,uGCnDYC,EAAUC,EAAAA,GAAAA,IAAH,kbA8BPC,EAAYD,EAAAA,GAAAA,IAAH,0e","sources":["components/API/API.js","components/Pages/MovieDetails.jsx","components/Pages/Pages.styled.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=1908df0a632eb4291cd1ba925f0a1a18'\n\n\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}","import { FetchDetails } from \"components/API/API\";\nimport React, { useState, useEffect, Suspense, useRef } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\nimport { Details } from './Pages.styled';\n\n\nconst MovieDetails = () => {\n    const [details, setDetails] = useState(null);\n    const { id } = useParams();\n    const {\n        title = '',\n        poster_path = '',\n        overview = '',\n        genres = [],\n        vote_average = ''\n    } = details || {};\n\n    useEffect(() => {\n        FetchDetails(id).then(setDetails)\n    }, [id]);\n\n    const location = useLocation();\n    const comeBack = useRef(location.state?.from || '/');\n    \n    return (\n        <Details>\n            <div>\n                <Link to={comeBack.current}>Back</Link>\n            </div>\n            <article>\n            <div className=\"card\">\n                <img src={`https://image.tmdb.org/t/p/w200/${poster_path}`} className=\"card-img-top\" alt=\"...\" />\n                <div>\n                    <h2>{title}</h2>\n                    <p>{overview}</p>\n                </div>\n                <ul>\n                    <li><span>Genre:</span> {genres.map(({ name }) => name).join(', ')}</li>\n                    <li><span>Rating:</span> {vote_average}</li>\n                </ul>\n            </div>\n            </article>\n            <ul>\n                <Link to=\"cast\">Cast</Link>\n                <Link to=\"reviews\">Reviews</Link>\n            </ul>\n\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </Details>\n    );\n    \n};\n\nexport default MovieDetails;\n\n\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  article {\n    display: flex;\n    gap: 20px;\n    align-items: start;\n    margin-top: 20px;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 1.3rem;\n  }\n  p {\n    margin: 30px 0 0;\n    font-size: 1.2rem;\n  }\n\n  ul {\n    display: flex;\n    gap: 20px;\n    list-style: none;\n    padding: 0;\n    span {\n        font-size: 1.1rem;\n        font-weight: 500;\n        font-style: italic;\n    }\n  }\n`;\n\nexport const MovieForm = styled.div`\n  label {\n    display: flex;\n    margin-bottom: 10px;\n    font-size: 1.2rem;\n  }\n\n  input {\n    font-size: 1.1rem;\n    border: 1px solid;\n    border-radius: 5px;\n    margin-right: 10px;\n  }\n  input::placeholder {\n    font-size: 0.9rem;\n  }\n  \n  button {\n    border: 1px solid;\n    font-size: 1.1rem;\n    border-radius: 5px;\n    background-color: #fff;\n      &:hover {\n        background-color: blue;\n        color: #fff;\n      }\n      \n  }\n`"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","useState","details","setDetails","useParams","title","poster_path","overview","genres","vote_average","useEffect","then","location","useLocation","comeBack","useRef","state","from","to","current","className","src","alt","map","name","join","Suspense","fallback","Details","styled","MovieForm"],"sourceRoot":""}