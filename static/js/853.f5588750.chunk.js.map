{"version":3,"file":"static/js/853.f5588750.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,sFCzCMQ,E,OAAKC,GAAAA,GAAH,8I,SCEFC,EAAY,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACpBc,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACJ,EAAD,UACGX,GACCA,EAAKgB,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,MAAP,OACP,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaX,GAAMY,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFIV,EADF,KAShB,C,+FCiCD,UA7Cc,WACZ,OAA4Bc,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAMI,IAAI,SAC1BD,IAAaxB,EAAAA,EAAAA,IAAUwB,GAAaE,KAAKP,GACxCK,IACHL,EAAU,MACVG,EAAS,CAAC,GAEb,GAAE,CAACD,EAAOC,KAWT,SAAC,IAAD,WACE,kBAAMK,SAVV,SAAsBC,GACpBA,EAAEC,iBACFP,EAAS,CACPD,MAAOO,EAAEE,cAAcC,SAASC,OAAOC,QAEzCL,EAAEE,cAAcI,OACjB,EAIG,WACE,wBAAI,YACJ,kBAAOC,QAAQ,cAAf,SAA6B,qBAC7B,kBACEC,aAAa,MACbC,KAAK,OACLlC,GAAG,cACHmC,YAAY,4BACZC,KAAK,YAEP,mBAAQF,KAAK,SAAb,SAAsB,YACf,OAANnB,QAAM,IAANA,OAAA,EAAAA,EAAQsB,QAAS,IAChB,iCACE,wBAAI,iBACJ,SAAC,IAAD,CAAW5C,KAAMsB,WAM5B,C,uGC9CYuB,EAAUjC,EAAAA,GAAAA,IAAH,kbA8BPkC,EAAYlC,EAAAA,GAAAA,IAAH,qb","sources":["components/API/API.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Pages/Movie.jsx","components/Pages/Pages.styled.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=1908df0a632eb4291cd1ba925f0a1a18'\n\n\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}","import styled from 'styled-components';\nexport const Ol = styled.ol`\n  padding: 20px;\n  li {\n    margin-bottom: 5px;\n  }\n  a {\n    text-decoration: none;\n    cursor: pointer;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { Ol } from './MovieList.styled';\n\nexport const MovieList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <Ol>\n      {data &&\n        data.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n    </Ol>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FetchFilm } from 'components/API/API';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { MovieForm } from './Pages.styled';\nconst Movie = () => {\n  const [movies, setMovies] = useState(null);\n  const [query, setQuery] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = query.get('query');\n    if (searchQuery) FetchFilm(searchQuery).then(setMovies);\n    if (!searchQuery) {\n      setMovies(null);\n      setQuery({});\n    }\n  }, [query, setQuery]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setQuery({\n      query: e.currentTarget.elements.search.value,\n    });\n    e.currentTarget.reset();\n  }\n\n  return (\n    <MovieForm>\n      <form onSubmit={handleSubmit}>\n        <h2>Movies</h2>\n        <label htmlFor=\"movieSearch\">Movie to search</label>\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          id=\"movieSearch\"\n          placeholder=\"Write the movie to search\"\n          name=\"search\"\n        />\n        <button type=\"submit\">Search</button>\n        {movies?.length > 0 && (\n          <>\n            <h2>List movies</h2>\n            <MovieList data={movies} />\n          </>\n        )}\n      </form>\n    </MovieForm>\n  );\n};\n\nexport default Movie;\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  article {\n    display: flex;\n    gap: 20px;\n    align-items: start;\n    margin-top: 20px;\n  }\n\n  h2 {\n    margin: 0;\n    font-size: 1.3rem;\n  }\n  p {\n    margin: 30px 0 0;\n    font-size: 1.2rem;\n  }\n\n  ul {\n    display: flex;\n    gap: 20px;\n    list-style: none;\n    padding: 0;\n    span {\n        font-size: 1.1rem;\n        font-weight: 500;\n        font-style: italic;\n    }\n  }\n`;\n\nexport const MovieForm = styled.div`\n  label {\n    display: flex;\n    margin-bottom: 10px;\n    font-size: 1.2rem;\n  }\n\n  input {\n    font-size: 1.1rem;\n    border: 1px solid;\n    border-radius: 5px;\n    margin-right: 10px;\n  }\n  \n  button {\n    border: 1px solid;\n    font-size: 1.1rem;\n    border-radius: 5px;\n    background-color: #fff;\n      &:hover {\n        background-color: blue;\n        color: #fff;\n      }\n      \n  }\n`"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","Ol","styled","MovieList","location","useLocation","map","title","to","state","from","useState","movies","setMovies","useSearchParams","query","setQuery","useEffect","searchQuery","get","then","onSubmit","e","preventDefault","currentTarget","elements","search","value","reset","htmlFor","autoComplete","type","placeholder","name","length","Details","MovieForm"],"sourceRoot":""}