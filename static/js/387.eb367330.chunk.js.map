{"version":3,"file":"static/js/387.eb367330.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,sHCzCMQ,E,OAAeC,GAAAA,IAAH,uK,SCmCzB,EA9BgB,WACd,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,GAMR,OAJAU,EAAAA,EAAAA,YAAU,YACRP,EAAAA,EAAAA,IAAYH,GAAIW,KAAKH,EACtB,GAAE,CAACR,IAEkB,IAAlBO,EAAOK,QACF,yBAAK,yBAGZ,SAACR,EAAD,WACE,wBACGG,EAAOM,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACV,2BACE,wBAAKA,KACL,uBAAID,MAFGd,EADC,OASnB,C","sources":["components/API/API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=1908df0a632eb4291cd1ba925f0a1a18'\n\n\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}","import styled from 'styled-components';\nexport const ReviewStyled = styled.div`\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n    padding: 0;\n  }\n\n  li {\n    margin-bottom: 20px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FetchReview } from 'components/API/API';\nimport PropTypes from 'prop-types';\nimport { ReviewStyled } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviev, setReviev] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    FetchReview(id).then(setReviev);\n  }, [id]);\n\n  if (reviev.length === 0) {\n    return <div>There is no reviews</div>;\n  }\n  return (\n    <ReviewStyled>\n      <ul>\n        {reviev.map(({ id, content, author }) => (\n          <li key={id}>\n            <h5>{author}</h5>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </ReviewStyled>\n  );\n};\n\nReviews.propTypes = {\n  content: PropTypes.string,\n  author: PropTypes.string,\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","ReviewStyled","styled","useState","reviev","setReviev","useParams","useEffect","then","length","map","content","author"],"sourceRoot":""}