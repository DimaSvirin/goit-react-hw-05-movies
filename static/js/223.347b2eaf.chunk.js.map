{"version":3,"file":"static/js/223.347b2eaf.chunk.js","mappings":"+SACMA,EAAW,gCACXC,EAAU,2CAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8GAE+BC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,8BAAkCC,IAFtE,cAEcG,EAFd,yBAGeA,EAASC,KAAKC,SAH7B,gCAKQC,QAAQC,IAAR,MALR,wFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,iGAEgCP,EAAAA,EAAAA,GAAM,GAAD,OAAKH,EAAL,wBAA+BC,EAA/B,kBAAkDS,EAAlD,+CAFrC,cAEeN,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAKSC,QAAQC,IAAR,MALT,wFASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,2BAA0CX,IAF/E,cAEeG,EAFf,yBAGgBA,EAASC,MAHzB,gCAKSE,QAAQC,IAAR,MALT,wFASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,mCAAkDX,IAFvF,cAEeG,EAFf,yBAGgBA,EAASC,KAAKS,MAH9B,gCAMSP,QAAQC,IAAR,MANT,wFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,iGAEgCT,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,iBAAqBY,EAArB,0CAAyDX,IAF9F,cAEeG,EAFf,yBAGgBA,EAASC,KAAKC,SAH9B,gCAMSC,QAAQC,IAAR,MANT,gF,sHCzCMQ,E,OAAaC,GAAAA,IAAH,gP,SC6CvB,EAvCa,WACT,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQR,GAAOS,EAAAA,EAAAA,MAAPT,GAMR,OAJAU,EAAAA,EAAAA,YAAU,YACNT,EAAAA,EAAAA,IAAWD,GAAIW,KAAKH,EACvB,GAAE,CAACR,IAGA,CAAEO,MAAAA,KACA,UAACH,EAAD,YACE,wBAAI,WACJ,wBACqB,KAAb,OAALG,QAAK,IAALA,OAAA,EAAAA,EAAOK,SACN,uBAAG,4CADJ,OAGCL,QAHD,IAGCA,OAHD,EAGCA,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,QAAlC,OACT,gBAAIC,UAAU,aAAd,WACE,yBAAG,cAAYF,GAAa,WAC5B,yBAAG,SAAOD,GAAQ,WAClB,gBAAKI,IAAKL,EAAY,0CAAsCA,G,y4DAAgCM,IAAKL,KAEjG,oBAL8BE,EADvB,QAc1B,C","sources":["components/API/API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=1908df0a632eb4291cd1ba925f0a1a18'\n\n\nexport async function FetchTrends() {\n       try {\n               const response = await axios(`${BASE_URL}trending/movie/day?${API_KEY}`);\n               return response.data.results;\n       } catch (error) {\n               console.log(error);\n        };\n};\n\nexport async function FetchFilm(searchValue) {\n        try {\n                const response = await axios(`${ BASE_URL }search/movie?${ API_KEY }&query=${ searchValue }&include_adult=false&language=en-US&page=1`);\n                return response.data.results;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchDetails(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}?language=en-US&${API_KEY}`);\n                return response.data;\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchCasts(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/credits?language=en-US&${API_KEY}`);\n                return response.data.cast;\n\n        } catch (error) {\n                console.log(error);\n        };\n};\n\nexport async function FetchReview(id) {\n        try {\n                const response = await axios(`${BASE_URL}movie/${id}/reviews?language=en-US&page=1&${API_KEY}`);\n                return response.data.results;\n\n        } catch (error) {\n                console.log(error);\n        }\n}","import styled from 'styled-components';\nexport const CastStyled = styled.div`\n  h2 {\n  }\n\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 20px;\n  }\n  img {\n    width: 200px;\n    background-color: lightgray;\n  }\n`;","import { FetchCasts } from \"components/API/API\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { CastStyled } from 'components/Cast/Cast.styled';\nimport nopersonphoto from \"../../images/nopersonphoto.png\"\n\nconst Cast = () => {\n    const [casts, setCasts] = useState([]);\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        FetchCasts(id).then(setCasts);\n    }, [id]);\n\n    return (\n        { casts } && (\n          <CastStyled>\n            <h2>Cast:</h2>\n            <ul>\n              {casts?.length === 0 ? (\n                <p>We don't have any casts for this movies</p>\n              ) : (\n                casts?.map(({ profile_path, name, character, cast_id }) => (\n                  <li className=\"thumb-cast\" key={cast_id}>\n                    <p>Character: {character || 'none'}</p>\n                    <p>Name: {name || 'none'}</p>\n                    <img src={profile_path ? `https://image.tmdb.org/t/p/w200/${profile_path}` : nopersonphoto} alt={name} />\n    \n                    <br />\n                  </li>\n                ))\n              )}\n            </ul>\n          </CastStyled>\n        )\n      );\n};\n\nCast.propTypes = {\n    profile_path: PropTypes.string,\n    name: PropTypes.string,\n    character: PropTypes.string\n};\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","FetchTrends","axios","response","data","results","console","log","FetchFilm","searchValue","FetchDetails","id","FetchCasts","cast","FetchReview","CastStyled","styled","useState","casts","setCasts","useParams","useEffect","then","length","map","profile_path","name","character","cast_id","className","src","alt"],"sourceRoot":""}